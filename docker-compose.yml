version: '3.7'

services:
  django:
    container_name: "django"
    image: ${CI_REGISTRY_IMAGE}
    env_file:
      - $env
    tty: true
    read_only: true
#    restart: unless-stopped
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    healthcheck:
      test: "curl --fail http://localhost:8000/api/schema/swagger-ui/"
      interval: 30s
      timeout: 2s
      retries: 3
      start_period: 1m

  pushpin:
    container_name: "pushpin"
    image: fanout/pushpin
    environment:
      - target=django:8000
    volumes:
      - ./ci/routes:/etc/pushpin/routes
    ports:
      - "5561:5561"
      - "5562:5562"
      - "5563:5563"
      - "7999:7999"
    depends_on:
      - django

  celery-worker:
    container_name: "celery-worker"
    image: ${CI_REGISTRY_IMAGE}
    command: [ "-m", "celery", "-A", "pulsewave", "worker", "-l", "INFO" ]
    env_file:
      - $env
    tty: true
#    restart: unless-stopped
    volumes:
      - .:/app
    healthcheck:
      test: [ "CMD-SHELL", "[[ $(($(date +%s)-$(stat -c %Y /tmp/celery_heartbeat))) -gt 2 ]] && exit 1 || exit 0" ]
      interval: 30s
      timeout: 2s
      retries: 2
      start_period: 30s

  celery-beat:
    container_name: "celery-beat"
    image: ${CI_REGISTRY_IMAGE}
    command: ["-m", "celery", "-A", "pulsewave", "beat", "-l", "INFO"]
    tty: true
    restart: unless-stopped
    env_file:
      - $env
    volumes:
      - .:/app
    healthcheck:
      test: [ "CMD-SHELL", "[[ $(($(date +%s)-$(stat -c %Y /tmp/celery_heartbeat))) -gt 61 ]] && exit 1 || exit 0" ]
      interval: 30s
      timeout: 2s
      retries: 2
      start_period: 1m

  bot:
    container_name: "bot"
    image: ${CI_REGISTRY_IMAGE}
    command: ["manage.py", "startbot"]
    read_only: true
#    restart: unless-stopped
    env_file:
      - $env
    volumes:
      - .:/app

networks:
  default:
    name: ${NETWORK}
    external: true



