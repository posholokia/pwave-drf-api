services:
  django:
    image: ${CI_REGISTRY_IMAGE}
    env_file:
      - $env
    tty: true
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    networks:
       - nginx-net
       - db-net
       - service-net
    healthcheck:
      test: "curl --fail http://localhost:8000/api/healthcheck/"
      interval: 10s
      timeout: 2s
      retries: 3
      start_period: 20s
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.TAG==prod-2
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 50s

  celery-worker:
    image: ${CI_REGISTRY_IMAGE}
    command: [ "-m", "celery", "-A", "pulsewave", "worker", "-l", "INFO" ]
    env_file:
      - $env
    volumes:
      - .:/app
    networks:
       - service-net
       - db-net
    healthcheck:
      test: [ "CMD-SHELL", "[[ $$(($$(date +%s)-$$(stat -c %Y /tmp/celery_heartbeat))) -gt 2 ]] && exit 1 || exit 0" ]
      interval: 30s
      timeout: 2s
      retries: 2
      start_period: 30s
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.TAG==prod-2
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 90s

  celery-beat:
    image: ${CI_REGISTRY_IMAGE}
    command: ["-m", "celery", "-A", "pulsewave", "beat", "-l", "INFO"]
    tty: true
    env_file:
      - $env
    volumes:
      - .:/app
    networks:
       - service-net
       - db-net
    healthcheck:
      test: [ "CMD-SHELL", "[[ $$(($$(date +%s)-$$(stat -c %Y /tmp/celery_heartbeat))) -gt 61 ]] && exit 1 || exit 0" ]
      interval: 30s
      timeout: 2s
      retries: 2
      start_period: 1m
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.TAG==prod-2
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 90s


  bot:
    image: ${CI_REGISTRY_IMAGE}
    command: ["manage.py", "startbot"]
    env_file:
      - $env
    volumes:
      - .:/app
    networks:
      - service-net
      - db-net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.TAG==prod-2
      update_config:
        parallelism: 1
        order: stop-first
        failure_action: rollback
        delay: 90s


networks:
  nginx-net:
    external: true
  db-net:
    external: true
  service-net:
    external: true


