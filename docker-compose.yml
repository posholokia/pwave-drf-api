version: '3.8'

services:
  db:
    image: postgres:12
    volumes:
      - pwdb_data_test:/var/lib/postgresql/data/
    ports:
      - "5432:5432"


  nginx:
    container_name: "nginx"
    image: marelboro/nginx
    ports:
      - 80:80
    depends_on:
      - django

  redis:
    container_name: "redis"
    image: redis:latest
    ports:
      - "6379:6379"

#  migrations:
#    container_name: "migrations"
#    build:
#      context: .
#      dockerfile: DockerfileMys
#    command: bash -c "python3 /usr/home/web/manage.py makemigrations  && \
#                      python3 /usr/home/web/manage.py migrate"
#    tty: true
#    volumes:
#      - .:/usr/home/web/:ro
#    environment:
#      SECRET_KEY: "${SECRET_KEY}"
#      DB_NAME: "${DB_NAME}"
#      DB_HOST: "${DB_HOST}"
#      DB_PASSWORD: "${DB_PASSWORD}"
#      DB_USER: "${DB_USER}"
#      DB_PORT: "${DB_PORT}"
#    depends_on:
#      - db

  django:
    container_name: "django"
    image: marelboro/pw-main-app:latest
    command: bash -c "python3 /usr/home/web/manage.py makemigrations  && \
                      python3 /usr/home/web/manage.py migrate && \
                      gunicorn -k uvicorn.workers.UvicornWorker pulsewave.asgi:application --bind 0.0.0.0:8000"
    tty: true
    env_file:
      - $env
    volumes:
      - .:/usr/home/web/
    ports:
      - "8000:8000"
    depends_on:
      - db

  celery-worker:
    container_name: "celery-worker"
    image: marelboro/pw-main-app:latest
    command: celery -A pulsewave worker -l INFO
    tty: true
    env_file:
      - $env
    volumes:
      - .:/usr/home/web/:ro
    depends_on:
      - redis

  celery-beat:
    container_name: "celery-beat"
    image: marelboro/pw-main-app:latest
    command: celery -A pulsewave beat -l INFO
    env_file:
      - $env
    read_only: true
    volumes:
      - .:/usr/home/web/:ro
    depends_on:
      - redis

  bot:
    container_name: "bot"
    image: marelboro/pw-main-app:latest
    command: python3 manage.py startbot
    tty: true
    env_file:
      - $env
    read_only: true
    volumes:
      - .:/usr/home/web/:ro
    depends_on:
      - django
      - redis


volumes:
  pwdb_data_test:
